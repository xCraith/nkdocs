{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to NK Docs","text":""},{"location":"#complete-gamemode-documentation","title":"Complete Gamemode Documentation","text":"<p>Informationen</p> <p>Hier findest du s\u00e4mtliche custom Funktionen und Hooks. Diese Funktionen sind fester Bestandteil des JvS - RP Gamemode von NK und darf nur von diesen verwendet werden.</p>"},{"location":"achievements/","title":"Achievement Functions","text":""},{"location":"achievements/#server-side-functions","title":"Server Side Functions","text":""},{"location":"achievements/#get-player-achievement-table","title":"Get Player Achievement Table","text":"<pre><code>PLAYER:GetAchievements() -- Returns all Player Achievements as table\n</code></pre>"},{"location":"achievements/#give-player-an-achievement","title":"Give Player an Achievement","text":"<pre><code>PLAYER:GiveAchievement(achievementName)\n</code></pre>"},{"location":"achievements/#revoke-player-an-achievement","title":"Revoke Player an Achievement","text":"<pre><code>PLAYER:RemoveAchievement(achievementName)\n</code></pre>"},{"location":"achievements/#check-player-achievement","title":"Check Player Achievement","text":"<pre><code>PLAYER:HasAchievement(achievementName) -- returns true or false\n</code></pre>"},{"location":"announces/","title":"Announce Functions","text":""},{"location":"announces/#client-net-messages","title":"Client Net Messages","text":""},{"location":"announces/#announce","title":"Announce","text":"<pre><code>net.Start(\"SWTOR.Announce\")\nnet.WriteString(message)\nnet.SendToServer()\n</code></pre>"},{"location":"announces/#faction-announce","title":"Faction Announce","text":"<pre><code>net.Start(\"SWTOR.FrakAnnounce\")\nnet.WriteString(message)\nnet.WriteEntity(ply)\nnet.SendToServer()\n</code></pre>"},{"location":"announces/#master-announce","title":"Master Announce","text":"<pre><code>net.Start(\"SWTOR.MasterAnnounce\")\nnet.WriteString(message)\nnet.WriteEntity(ply)\nnet.SendToServer()\n</code></pre>"},{"location":"announces/#hacking-announce","title":"Hacking Announce","text":"<pre><code>net.Start(\"SWTOR.HackAnnounce\")\nnet.WriteString(message)\nnet.WriteEntity(ply)\nnet.SendToServer()\n</code></pre>"},{"location":"capture/","title":"Capture System Functions","text":""},{"location":"capture/#serverside-functions","title":"Serverside Functions","text":""},{"location":"capture/#check-if-player-is-in-zone","title":"Check if Player is in Zone","text":"<pre><code>PLAYER:inCaptureZone()\n</code></pre>"},{"location":"cartel/","title":"Cartel Functions","text":""},{"location":"cartel/#shared-functions","title":"Shared Functions","text":""},{"location":"cartel/#gets-players-cartel-coins","title":"Gets Players Cartel Coins","text":"<pre><code>PLAYER:GetCartelCoins()\n</code></pre>"},{"location":"cartel/#serverside-functions","title":"Serverside Functions","text":""},{"location":"cartel/#add-cartelcoins-to-player","title":"Add Cartelcoins to Player","text":"<pre><code>PLAYER:AddCartelCoins( amount )\n</code></pre>"},{"location":"character/","title":"Character System Functions","text":""},{"location":"character/#shared-functions","title":"Shared Functions","text":""},{"location":"character/#gets-players-character-info","title":"Gets Players Character info","text":"<pre><code>PLAYER:GetChar( charid )\n</code></pre>"},{"location":"character/#gets-players-charid","title":"Gets Players CharID","text":"<pre><code>PLAYER:GetCharID()\n</code></pre>"},{"location":"character/#gets-players-faction-id","title":"Gets Players Faction ID","text":"<pre><code>PLAYER:GetFaction()\n</code></pre>"},{"location":"character/#gets-players-guild-id-if-valid","title":"Gets Players Guild ID if Valid","text":"<pre><code>PLAYER:GetGuildID()\n</code></pre>"},{"location":"character/#gets-players-sex","title":"Gets Players Sex","text":"<pre><code>PLAYER:GetSex()\n</code></pre>"},{"location":"character/#returns-players-faction-color","title":"Returns Players Faction Color","text":"<pre><code>PLAYER:GetFactionColor()\n</code></pre>"},{"location":"character/#serverside-functions","title":"Serverside Functions","text":""},{"location":"character/#gets-a-table-with-all-characters","title":"Gets a Table with all Characters","text":"<pre><code>CHARSYS.GetChars( ply, steamid64 )\n</code></pre>"},{"location":"character/#resets-players-body","title":"Resets Players Body","text":"<pre><code>CHARSYS.ResetBody(ply)\n</code></pre>"},{"location":"character/#updates-players-body","title":"Updates Players Body","text":"<pre><code>CHARSYS.UpdateBody(ply, modelpath)\n</code></pre>"},{"location":"character/#resets-players-headmodel","title":"Resets Players Headmodel","text":"<pre><code>CHARSYS.ResetHead(ply)\n</code></pre>"},{"location":"character/#updates-players-headmodel","title":"Updates Players Headmodel","text":"<pre><code>CHARSYS.UpdateHead(ply, modelpath)\n</code></pre>"},{"location":"character/#updates-players-maskmodel","title":"Updates Players Maskmodel","text":"<pre><code>CHARSYS.UpdateMask(ply, modelpath)\n</code></pre>"},{"location":"character/#resets-players-maskmodel","title":"Resets Players Maskmodel","text":"<pre><code>CHARSYS.ResetMask(ply)\n</code></pre>"},{"location":"character/#saves-players-character-to-database","title":"Saves Players Character to Database","text":"<pre><code>CHARSYS.SaveCurrentChar( ply )\n</code></pre>"},{"location":"character/#sets-players-head","title":"Sets Players Head","text":"<pre><code>PLAYER:AddCharacterHead( mdl )\n</code></pre>"},{"location":"character/#remove-players-head","title":"Remove Players Head","text":"<pre><code>PLAYER:RemoveCharacterHead()\n</code></pre>"},{"location":"character/#sets-players-maskmodel","title":"Sets Players Maskmodel","text":"<pre><code>PLAYER:AddCharacterMask( mdl )\n</code></pre>"},{"location":"character/#remove-players-mask","title":"Remove Players Mask","text":"<pre><code>PLAYER:RemoveCharacterMask()\n</code></pre>"},{"location":"character/#checks-if-player-is-owner-of-the-charid","title":"Checks if Player is owner of the CharID","text":"<pre><code>PLAYER:IsCharOwner( id )\n</code></pre>"},{"location":"charsys_hooks/","title":"Character System Hooks","text":""},{"location":"charsys_hooks/#serverside-hooks","title":"Serverside Hooks","text":""},{"location":"charsys_hooks/#hook-after-character-switch","title":"Hook after Character Switch","text":"<pre><code>hook.Call(\"CHARSYS.PostChange\", nil, ply , char.id )\n</code></pre>"},{"location":"charsys_hooks/#before-char-delete","title":"Before Char Delete","text":"<pre><code>hook.Call(\"CHARSYS.RemoveChar\", nil, ply, id)\n</code></pre>"},{"location":"charsys_hooks/#after-char-delete","title":"After Char Delete","text":"<pre><code>hook.Call(\"CHARSYS.OnDeleteChar\", nil, id )\n</code></pre>"},{"location":"chat/","title":"Chat Functions","text":""},{"location":"chat/#chatregister","title":"Chat:Register","text":"<p>Example: <pre><code>Chat:Register(\"ooc\", {\n    commands = {\"/ooc\", \"//\"},\n    message = function(sender, message)\n        local messageTable = {}\n\n        table.insert(messageTable, Color(240, 120, 0))\n        table.insert(messageTable, \"[OOC] \")\n        table.insert(messageTable, team.GetColor(sender:Team()))\n        table.insert(messageTable, sender)\n        table.insert(messageTable, Color(255, 255, 255))\n        table.insert(messageTable, \": \" .. message)\n\n        return messageTable\n    end,\n    shouldSend = function(receiver, sender)\n        return true\n    end\n})\n</code></pre></p>"},{"location":"chat/#chatregistercommand","title":"Chat:RegisterCommand","text":"<p>Example: <pre><code>Chat:RegisterCommand(\"kleidung\", {\n    commands = {\"/kleidung\"},\n    execute = function(ply, args)\n        net.Start(\"BodyGroups.Open\")\n        net.Send( ply )\n    end\n})\n</code></pre></p>"},{"location":"clothingstore/","title":"Clothingstore Functions","text":""},{"location":"clothingstore/#shared-functions","title":"Shared Functions","text":""},{"location":"clothingstore/#register-new-item-to-the-store","title":"Register new Item to the store","text":"<pre><code>CSTORE.RegisterNewItem( id, data )\n</code></pre>"},{"location":"clothingstore/#datatable-arguments","title":"Datatable Arguments","text":"argument description <code>ClothType</code> Mask,Helm,Body <code>Name</code> Itemname <code>Sex</code> 0 or 1 <code>Faction</code> 0,1,2 or false <code>Model</code> Modelpath <code>Level</code> Level <code>Price</code> Price"},{"location":"crafting/","title":"Crafting Functions","text":""},{"location":"crafting/#shared-functions","title":"Shared Functions","text":""},{"location":"crafting/#gets-players-crafting-upgrade-amount","title":"Gets Players Crafting Upgrade amount","text":"<pre><code>PLAYER:GetCraftUpgrade( key ) -- amount_lvl or speed_lvl\n</code></pre>"},{"location":"crafting/#gets-players-crafting-materials-amount","title":"Gets Players Crafting Materials amount","text":"<pre><code>PLAYER:GetCraftingMaterials( key )\n</code></pre>"},{"location":"crafting/#available-materials","title":"Available Materials","text":"argument <code>lizium</code> <code>diamond</code> <code>obsidian</code> <code>darkmatter</code> <code>stoff</code> <code>leder</code> <code>elektronik</code> <code>crystalparts</code>"},{"location":"crafting/#serverside-functions","title":"Serverside Functions","text":""},{"location":"crafting/#add-materials-to-a-player","title":"Add Materials to a Player","text":"<pre><code>CRAFTING.AddMats( ply, mat, amount )\n</code></pre>"},{"location":"createtable/","title":"DB:CreateTable","text":""},{"location":"createtable/#get-table","title":"Get Table","text":"<pre><code>DB:GetTable(tablename,database)\n</code></pre>"},{"location":"createtable/#arguments","title":"Arguments","text":"argument description <code>:AddColumn(name, datatype)</code> Adds column to table <code>:AddCharID()</code> Creates a column with the name \"CharID\" <code>:AddSteamID()</code> Creates a column with the name \"SteamID\" <code>:Init()</code> Yarak"},{"location":"createtable/#example","title":"Example","text":"<pre><code>    DB:CreateTable(\"Whitelist\")\n    :AddSteamID()\n    :Init()\n\n     DB:CreateTable(\"AuktionsMarkt\")\n    :AddColumn(\"ItemID\",\"TEXT\")\n    :AddColumn(\"Category\",\"TEXT\")\n    :AddCharID()\n    :Init()\n</code></pre>"},{"location":"custom_frames/","title":"Frames","text":""},{"location":"custom_frames/#clientside-functions","title":"Clientside Functions","text":"<p>Informationen</p> <p>Hier findest du s\u00e4mtliche custom Frames welche im Gamemode enthalten sind.</p>"},{"location":"custom_frames/#custom-frames","title":"Custom Frames","text":"DefaultName CustomName <code>DFrame</code> SWFrame <code>DScrollPanel</code> SWScroll <code>DTextEntry</code> SWTextEntry <code>DButton</code> SWButton <code>DModelPanel</code> SWModelPanel <p>Custom Message / Query</p> <p>Hier findest du Infos zu der Custom Derma message und Derma query.</p> <pre><code>SW_Message( strText, strTitle, strButtonText )\n</code></pre> <p>Beispiel</p> <pre><code>SW_Message( \"Es ist ein Fehler aufgetreten\", \"Fehler\", \"Okay\" )\n</code></pre> <pre><code>SW_Query( strText, strTitle, ... )\n</code></pre> <p>Beispiel</p> <pre><code>SW_Query(\"Namens \u00c4nderungen kosten 30.000 Credits, m\u00f6chtest du fortfahren ?\", \"Best\u00e4tigung\",\n    \"Best\u00e4tigen\",\n    function() \n        -- do something\n    end,\n    \"Abbrechen\"\n)\n</code></pre>"},{"location":"event/","title":"Event-System Functions","text":""},{"location":"event/#server-side-functions","title":"Server Side Functions","text":""},{"location":"event/#announce-an-event","title":"Announce an event","text":"<pre><code>EVENTSYS.Announce( eventName, eventDescription, locationName )\n</code></pre>"},{"location":"event/#start-functions-for-events","title":"Start functions for events","text":"<pre><code>EVENTSYS.StartAirdrop()\n</code></pre> <pre><code>EVENTSYS.StartHolocronHunt()\n</code></pre> <pre><code>EVENTSYS.StartKybercrystal()\n</code></pre> <pre><code>EVENTSYS.StartConquest()\n</code></pre> <pre><code>EVENTSYS.StartCrashedstarfighter()\n</code></pre> <pre><code>EVENTSYS.HuttenDealer()\n</code></pre>"},{"location":"fakeident/","title":"FakeIdentity Functions","text":""},{"location":"fakeident/#server-side-functions","title":"Server Side Functions","text":""},{"location":"fakeident/#get-players-fake-identities","title":"Get players fake identities","text":"<pre><code>GetFakeIdentities(ply, callback)\n</code></pre>"},{"location":"fakeident/#add-fake-identity-to-player","title":"add fake identity to player","text":"<pre><code>AddFakeIdentity(ply, fakename, fakerank) -- fakerank is the showed rank (e.g. \"Jedi Spion\")\n</code></pre>"},{"location":"fakeident/#remove-fake-identity-from-player","title":"remove fake identity from player","text":"<pre><code>DeleteFakeIdentity( ply, fakename)\n</code></pre>"},{"location":"gettable/","title":"DB:GetTable","text":""},{"location":"gettable/#get-table","title":"Get Table","text":"<pre><code>DB:GetTable(tablename,database)\n</code></pre>"},{"location":"gettable/#arguments","title":"Arguments","text":"argument description <code>:AddColumn(name, datatype)</code> Adds column to table <code>:GetFromPlayerSteamID(ply)</code> adds \"WHERE SteamID=steamidofply\" <code>:GetFromPlayerCharID(ply)</code> adds \"WHERE CharID=charidofply <code>:SetPlayerSteamID(ply)</code> adds \"SteamID=steamidofply\" when you insert data <code>:SetPlayerCharID(ply)</code> adds \"CharID=charidofply\" when you insert data <code>:Delete()</code> Activates delete mode <code>:Where(column,is,operator)</code> Where condition <code>:Set(column,value)</code> Updates value in a column <code>:GetTable(column)</code> ? <code>:Init()</code> returns a table"},{"location":"gettable/#example","title":"Example","text":"<pre><code>local items = DB:GetTable(\"AuktionsMarkt\"):Where(\"Category\",cat):Init()\n\n            local data = DB:GetTable(\"Whitelist\");\n            data:SetPlayerSteamID(steamid)\n            data:Init()\n\n            local data = DB:GetTable(\"Whitelist\");\n            data:GetFromPlayerSteamID(steamid)\n            data:Delete()\n            data:Init()\n\n            local data = DB:GetTable(\"Whitelist\");\n            data:GetFromPlayerSteamID(steamID64)\n            data:Init()\n</code></pre>"},{"location":"holocron/","title":"Holocron Functions","text":""},{"location":"holocron/#serverside-functions","title":"Serverside Functions","text":""},{"location":"holocron/#drops-players-holocron-if-he-has-one","title":"Drops Players Holocron if he has one","text":"<pre><code>dropHolo( ply )\n</code></pre>"},{"location":"hud_convar/","title":"HUD Convars","text":""},{"location":"hud_convar/#convar","title":"Convar","text":""},{"location":"hud_convar/#toggle-the-hud-crosshair","title":"toggle the hud crosshair","text":"<pre><code>GetConVar(\"swtor_crosshair\")\n</code></pre>"},{"location":"inventory/","title":"Additional Inventory Functions","text":""},{"location":"inventory/#server-side-functions","title":"Server Side Functions","text":""},{"location":"inventory/#you-can-use-funcs-like-hasinvitem-hasinvspace-giveinvitem-removeinvitem-like-that-functionnamefirstarg-if-existscount","title":"You can use funcs like HasInvItem, HasInvSpace, GiveInvItem, RemoveInvItem like that = functionName(firstArg (if exists),count)","text":""},{"location":"inventory/#get-if-player-owns-item-no-matter-what-inv","title":"Get if player owns item no matter what inv","text":"<pre><code>PLAYER:HasInvItem(itemName) -- If player has item == true if not == false\n</code></pre>"},{"location":"inventory/#clear-inv-of-an-player","title":"Clear inv of an player","text":"<pre><code>PLAYER:ClearInventory()\n</code></pre>"},{"location":"inventory/#check-player-for-inv-space","title":"Check player for inv space","text":"<pre><code>PLAYER:HasInvSpace() -- if space == true if not == false\n</code></pre>"},{"location":"inventory/#give-player-an-item-no-matter-what-inv","title":"Give player an item no matter what inv","text":"<pre><code>PLAYER:GiveInvItem(itemName) -- returns false if player has no space, check space func or itself for check\n</code></pre>"},{"location":"inventory/#remove-player-an-item-no-matter-what-inv","title":"Remove player an item no matter what inv","text":"<pre><code>PLAYER:RemoveInvItem(itemName) -- returns false if player hasn't the specific item, check space func or itself for check\n</code></pre>"},{"location":"inventory/#get-players-item-count-inv-all-invs-together","title":"Get players item count inv all invs together","text":"<pre><code>PLAYER:GetInvItemCount(itemName) -- returns count as int\n</code></pre>"},{"location":"inventory/#you-can-set-counts-for-the-following-funcs-with-itemnamecount","title":"You can set counts for the following funcs with [itemname].count","text":""},{"location":"inventory/#checks-if-player-has-a-list-of-items","title":"Checks if Player has a list of items","text":"<pre><code>PLAYER:HasItemList(itemTable) -- checks if a table of items is owned by player\n</code></pre>"},{"location":"inventory/#removes-multiple-items-from-player-inv","title":"Removes multiple items from player inv","text":"<pre><code>PLAYER:GiveItemList(itemTable) -- gives a table of items from player inv be sure the player has space\n</code></pre>"},{"location":"inventory/#removes-multiple-items-from-player-inv_1","title":"Removes multiple items from player inv","text":"<pre><code>PLAYER:RemoveItemList(itemTable) -- remove a table of items from player inv be sure the player has items\n</code></pre>"},{"location":"job/","title":"Job Functions","text":""},{"location":"job/#shared-functions","title":"Shared Functions","text":""},{"location":"job/#table-for-all-informations-about-the-job","title":"Table for all informations about the Job","text":"<pre><code>PLAYER:getJobTable()\n</code></pre>"},{"location":"job/#check-if-player-is-a-trooper","title":"Check if Player is a Trooper","text":"<pre><code>PLAYER:IsTrooper()\n</code></pre>"},{"location":"job/#dont-use-it","title":"Don't use it","text":"<pre><code>PLAYER:GetRank()\n</code></pre>"},{"location":"job/#get-teamid","title":"Get TeamID","text":"<pre><code>PLAYER:getTeamID()\n</code></pre>"},{"location":"job/#serverside-functions","title":"Serverside Functions","text":""},{"location":"job/#set-job-of-a-player","title":"Set Job of a Player","text":"<pre><code>PLAYER:changeJob( number )\n</code></pre>"},{"location":"kgjsys/","title":"KGJ System Functions","text":""},{"location":"kgjsys/#serverside-functions","title":"Serverside Functions","text":""},{"location":"kgjsys/#notify-all-hunters-that-a-new-hit-is-available","title":"Notify all Hunters, that a new hit is available","text":"<pre><code>KGJ.NotifyHunter()\n</code></pre>"},{"location":"meetsystem/","title":"Meet System Functions","text":""},{"location":"meetsystem/#serverside-functions","title":"Serverside Functions","text":""},{"location":"meetsystem/#adds-a-character-to-players-meetlist","title":"Add's a Character to Players meetlist","text":"<pre><code>PLAYER:AddMeet( charid )\n</code></pre>"},{"location":"meetsystem/#loads-players-meetlist","title":"Loads Players meetlist","text":"<pre><code>PLAYER:LoadMeet()\n</code></pre>"},{"location":"money/","title":"Money Functions","text":""},{"location":"money/#shared-functions","title":"Shared Functions","text":""},{"location":"money/#get-money-of-a-player","title":"Get money of a Player","text":"<pre><code>meta:getMoney()\n</code></pre>"},{"location":"money/#can-afford-check","title":"Can afford check","text":"<pre><code>meta:canAfford( amount )\n</code></pre>"},{"location":"money/#serverside-functions","title":"Serverside Functions","text":""},{"location":"money/#add-money-to-a-player","title":"Add money to a Player","text":"<pre><code>meta:addMoney( amount )\n</code></pre>"},{"location":"money/#set-money-of-the-player","title":"Set money of the Player","text":"<pre><code>meta:setMoney( amount )\n</code></pre>"},{"location":"name/","title":"Name Functions","text":""},{"location":"name/#serverside-functions","title":"Serverside Functions","text":""},{"location":"name/#sets-the-rp-name-of-a-player","title":"Sets the RP Name of a Player","text":"<pre><code>meta:SetRPName( name )\n</code></pre>"},{"location":"namechange/","title":"Namechange Functions","text":""},{"location":"namechange/#serverside-net-message","title":"Serverside Net Message","text":""},{"location":"namechange/#change-players-name","title":"Change Players name","text":"<pre><code>net.Start(\"NAMESWITCH.ChangeName\")\nnet.WriteString(nameString)\nnet.SendToServer()\n</code></pre>"},{"location":"post/","title":"Post System Functions","text":""},{"location":"post/#serverside-functions","title":"Serverside Functions","text":""},{"location":"post/#opens-the-menu-for-the-player","title":"Opens the menu for the Player","text":"<pre><code>SWPOST.OpenBox( ply )\n</code></pre>"},{"location":"rank/","title":"Rank Functions","text":""},{"location":"rank/#shared-functions","title":"Shared Functions","text":""},{"location":"rank/#gets-current-rank-number","title":"Gets current Rank Number","text":"<pre><code>function meta:GetCurrentRank()\n</code></pre>"},{"location":"rank/#gets-next-rank-job-cmd","title":"Gets next rank job cmd","text":"<pre><code>function meta:GetNextRank()\n</code></pre>"},{"location":"rank/#gets-last-rank-job-cmd","title":"Gets last rank job cmd","text":"<pre><code>function meta:GetLowerRank()\n</code></pre>"},{"location":"rank/#serverside-functions","title":"Serverside Functions","text":""},{"location":"rank/#uprank-the-player","title":"Uprank the Player","text":"<pre><code>function meta:UpRank()\n</code></pre>"},{"location":"rank/#derank-the-player","title":"Derank the player","text":"<pre><code>function meta:DeRank()\n</code></pre>"},{"location":"registerdb/","title":"Register DB","text":"<pre><code>DB:RegisterDatabase(Host,Port,Username,Password,Database,Socket,Default)\n</code></pre>"},{"location":"shiphacking/","title":"Ship Hacking Functions","text":""},{"location":"shiphacking/#shared-functions","title":"Shared Functions","text":""},{"location":"shiphacking/#checks-if-a-specific-ship-is-hacked","title":"Checks if a specific Ship is hacked","text":"<pre><code>SHIPS:IsHacked( class )\n</code></pre>"},{"location":"shiphacking/#serverside-functions","title":"Serverside Functions","text":""},{"location":"shiphacking/#starts-ship-hack","title":"Starts Ship hack","text":"<pre><code>SHIPS:StartHack( id, ply, shipEntity )\n</code></pre>"},{"location":"skinlib/","title":"SKIN Lib","text":""},{"location":"skinlib/#clientside-functions","title":"Clientside Functions","text":"<p>Informationen</p> <p>Um diese Lib in-game zu verwenden, benutze einfach SKIN(x,y,w,h,color).</p>"},{"location":"skinlib/#skin-lib_1","title":"SKIN Lib","text":"<pre><code>SKIN.Frame = GWEN.CreateTextureBorder( 474, 0, 320, 110, 142, 42, 142, 36 )\nSKIN.Frame2 = GWEN.CreateTextureBorder( 803, 0, 142, 120, 72, 49, 72, 22 )\nSKIN.Frame3 = GWEN.CreateTextureBorder( 342, 244, 50, 41, 16, 16, 16, 16 )\nSKIN.Frame4 = GWEN.CreateTextureBorder( 733, 217, 265, 255 - 219, 128, 8, 128, 8 )\nSKIN.Grip = GWEN.CreateTextureBorder( 900, 126, 16, 52, 4, 20, 4, 20 )\nSKIN.FrameTitle = GWEN.CreateTextureBorder( 952, 7, 54, 138, 24, 52, 24, 32 )\nSKIN.CloseButton = GWEN.CreateTextureCentered(13, 999, 16, 16)\nSKIN.MoneyIcon = GWEN.CreateTextureNormal(17, 946, 36, 36)\nSKIN.Button = GWEN.CreateTextureBorder( 128, 243, 97, 35, 20, 16, 20, 16 )\nSKIN.ButtonHover = GWEN.CreateTextureBorder( 235, 243, 97, 35, 20, 16, 20, 16 )\nSKIN.TextEntry = GWEN.CreateTextureBorder( 127, 188, 104, 43, 19, 32, 83, 16 )\nSKIN.TextEntryHover = GWEN.CreateTextureBorder( 360, 188, 103, 43, 19, 32, 83, 16 )\nSKIN.ScoreboardBadge = GWEN.CreateTextureBorder(607, 310, 400, 440,280,0,128,0)\nSKIN.ScoreGlare = GWEN.CreateTextureBorder( 468, 306, 138, 29, 69, 0, 69, 0 )\nSKIN.InvSlot = GWEN.CreateTextureCentered(5, 408, 60, 60)\nSKIN.InvSlotBig = GWEN.CreateTextureBorder(5, 408, 60, 60, 28, 12, 34, 12)\nSKIN.InvSlotHover = GWEN.CreateTextureCentered(3, 467, 60, 60)\nSKIN.InvSlotFrame = GWEN.CreateTextureCentered(66, 465, 60, 60)\nSKIN.InvSlotBack = GWEN.CreateTextureCentered(67, 407, 60, 60)\nSKIN.InvPrimary = GWEN.CreateTextureNormal(612, 776, 228, 228)\nSKIN.Announce = GWEN.CreateTextureBorder(345, 890, 260, 130, 128, 64, 128, 64)\nSKIN.CartelMarketFrame = GWEN.CreateTextureBorder( 0, 0, 1024, 678, 264, 18, 264, 28 )\nSKIN.CartelMarketCoinsBg = GWEN.CreateTextureNormal( 736, 713, 280, 240 )\nSKIN.CartelCoinsIcon = GWEN.CreateTextureNormal( 0, 691, 49, 54 )\nSKIN.CartelCoinsIcon2 = GWEN.CreateTextureNormal( 0, 751, 49, 54 )\nSKIN.FancyFrame = GWEN.CreateTextureBorder( 435, 705, 247, 308, 163, 114, 30, 108 )\nSKIN.ButtonDark = GWEN.CreateTextureBorder( 505, 997, 30, 23, 6, 6, 6, 6 )\nSKIN.ButtonDarkHover = GWEN.CreateTextureBorder( 459, 994, 39, 31, 9, 9, 9, 9 )\nSKIN.Frame5 = GWEN.CreateTextureBorder( 3, 911, 303, 97, 33, 23, 39, 26 )\nSKIN.Frame6 = GWEN.CreateTextureBorder( 0, 0, 823, 697, 390, 80, 390, 75 )\nSKIN.Frame7 = GWEN.CreateTextureBorder( 786, 721, 116, 64, 15, 18, 15, 18 )\nSKIN.Frame8 = GWEN.CreateTextureBorder( 815, 890, 96, 96, 18, 18, 18, 18 )\nSKIN.Frame9 = GWEN.CreateTextureBorder( 917, 884, 107, 107, 24, 24, 24, 24 )\nSKIN.CartelCoin = GWEN.CreateTextureNormal( 956, 473, 55, 55 )\n</code></pre>"},{"location":"squad/","title":"Squad Functions","text":""},{"location":"squad/#shared-functions","title":"Shared Functions","text":""},{"location":"squad/#gets-table-of-players-squad","title":"Gets Table of Players Squad","text":"<pre><code>PLAYER:GetSquad()\n</code></pre>"},{"location":"squad/#retursn-players-squad-name","title":"Retursn Players Squad name","text":"<pre><code>PLAYER:GetSquadName()\n</code></pre>"},{"location":"squad/#check-if-player-is-in-same-squad","title":"Check if Player is in same Squad","text":"<pre><code>PLAYER:SameSquad( entitie )\n</code></pre>"},{"location":"squad/#returns-all-squad-members-of-players-squad","title":"Returns all Squad Members of Players squad","text":"<pre><code>PLAYER:GetSquadMembers()\n</code></pre>"},{"location":"squad/#serverside-functions","title":"Serverside Functions","text":""},{"location":"squad/#joins-a-squad","title":"Joins a Squad","text":"<pre><code>PLAYER:JoinSquad( squad, leader )\n</code></pre>"},{"location":"squad/#leavs-a-squad","title":"Leavs a Squad","text":"<pre><code>PLAYER:LeaveSquad()\n</code></pre>"},{"location":"squad/#decleare-a-squad","title":"Decleare a Squad","text":"<pre><code>PLAYER:DeclearSquad()\n</code></pre>"},{"location":"squad/#force-decleare-a-squad","title":"Force Decleare a Squad","text":"<pre><code>SQUAD.ForceDeclearSquad( squad )\n</code></pre>"},{"location":"thirdperson/","title":"Thirdperson Functions","text":""},{"location":"thirdperson/#clientside-functions","title":"Clientside Functions","text":""},{"location":"thirdperson/#switch-the-thirdperson-of-a-player","title":"Switch the Thirdperson of a Player","text":"<pre><code>ThirdPerson.Enabled = bool\n</code></pre>"},{"location":"title/","title":"Title System Functions","text":""},{"location":"title/#clientside-functions","title":"Clientside Functions","text":""},{"location":"title/#gets-the-id-of-a-specific-title","title":"Gets the ID of a specific title","text":"<pre><code>GetIdOfTitle(name)\n</code></pre>"},{"location":"title/#serverside-functions","title":"Serverside Functions","text":""},{"location":"title/#checks-if-title-exists","title":"Checks if Title exists","text":"<pre><code>TitleWithNameExists(name)\n</code></pre>"},{"location":"title/#gives-a-title-to-a-player","title":"Gives a Title to a Player","text":"<pre><code>PLAYER:GiveTitle(titlename)\n</code></pre>"},{"location":"title/#returns-the-title-of-a-player","title":"Returns the Title of a Player","text":"<pre><code>PLAYER:GetTitleOfPlayer()\n</code></pre>"},{"location":"trainingzones/","title":"Trainingszone Functions","text":""},{"location":"trainingzones/#serverside-functions","title":"Serverside Functions","text":""},{"location":"trainingzones/#returns-if-player-is-in-a-training-zone","title":"Returns if Player is in a Training zone","text":"<pre><code>PLAYER:inTrainingZone()\n</code></pre>"},{"location":"webhooklib/","title":"Discord Webhook","text":""},{"location":"webhooklib/#serverside-functions","title":"Serverside Functions","text":""},{"location":"webhooklib/#post-discord-webhooks","title":"Post Discord WebHooks","text":""},{"location":"webhooklib/#arguments","title":"Arguments","text":"argument description <code>title</code> title of the log <code>msg</code> message of the log <code>logname</code> name of the log (printed under the embed) <code>player</code> active player <code>target</code> passive player <code>image</code> image url with .png <code>decimalColor</code> color decimalcode <code>webHook</code> webHook url <pre><code>local hexColor = \"COLORCODE\"\nlocal decimalColor = tonumber(hexColor, 16)\n\nWEBHOOK.DiscordLog( title, msg, logname, player, target, image, decimalColor, webHook )\n</code></pre>"}]}